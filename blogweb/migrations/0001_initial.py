# Generated by Django 4.0.3 on 2022-03-25 15:46

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.UUIDField(auto_created=True, default='afab3e38ac5211eca2a7acbc329b8455', primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('version', models.IntegerField(verbose_name='version number')),
                ('create_time', models.DateTimeField(auto_now_add=True, max_length=32, verbose_name='creation time')),
                ('create_by', models.CharField(max_length=15, verbose_name='creator name')),
                ('update_time', models.DateTimeField(auto_now=True, max_length=32, verbose_name='update time')),
                ('update_by', models.CharField(max_length=15, verbose_name='update by user')),
                ('is_deleted', models.BooleanField(max_length=10, verbose_name='the flag of deleted or not')),
                ('nick_name', models.CharField(max_length=15, verbose_name='nickname')),
                ('user_signup_way', models.IntegerField(choices=[(0, 'Account and password'), (1, 'Mobile phone number'), (2, 'Email'), (3, 'QQ'), (4, 'Wechat')], default=0, verbose_name='the ways of signup')),
                ('mobile', models.CharField(blank=True, max_length=15, null=True, verbose_name='mobile phone number')),
                ('membership_points', models.IntegerField(default=0, verbose_name='membership points')),
                ('token', models.UUIDField(blank=True, default='afab8758ac5211eca2a7acbc329b8455', null=True, verbose_name='user token')),
            ],
            options={
                'verbose_name_plural': 'User information',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.UUIDField(auto_created=True, default='afab3e38ac5211eca2a7acbc329b8455', primary_key=True, serialize=False)),
                ('version', models.IntegerField(verbose_name='version number')),
                ('create_time', models.DateTimeField(auto_now_add=True, max_length=32, verbose_name='creation time')),
                ('create_by', models.CharField(max_length=15, verbose_name='creator name')),
                ('update_time', models.DateTimeField(auto_now=True, max_length=32, verbose_name='update time')),
                ('update_by', models.CharField(max_length=15, verbose_name='update by user')),
                ('is_deleted', models.BooleanField(max_length=10, verbose_name='the flag of deleted or not')),
                ('title', models.CharField(blank=True, max_length=50, null=True, verbose_name='article title')),
                ('abstract', models.CharField(blank=True, max_length=100, null=True, verbose_name='article abstract')),
                ('content', models.TextField(blank=True, null=True, verbose_name='article content')),
                ('status', models.IntegerField(choices=[(0, 'UNPUBLISHED'), (1, 'PUBLISHED')])),
                ('is_recommendation', models.BooleanField(default=True, verbose_name='recommended or not')),
                ('read_times', models.IntegerField(default=0, verbose_name='read times of article')),
                ('comment_counts', models.IntegerField(default=0, verbose_name='comment counts of article')),
                ('likes_counts', models.IntegerField(default=0, verbose_name='the counts of likes for the article')),
                ('favorites_counts', models.IntegerField(default=0, verbose_name='the counts of favorites for the article')),
                ('category', models.IntegerField(blank=True, choices=[(0, 'DEVELOPMENT'), (1, 'TEST'), (2, 'DEVOPS')], null=True, verbose_name='article category')),
                ('author', models.CharField(blank=True, max_length=15, null=True, verbose_name='article author')),
                ('source', models.CharField(blank=True, max_length=50, null=True, verbose_name='article  source')),
            ],
            options={
                'verbose_name_plural': 'Articles',
            },
        ),
        migrations.CreateModel(
            name='Avatar',
            fields=[
                ('id', models.UUIDField(auto_created=True, default='afab3e38ac5211eca2a7acbc329b8455', primary_key=True, serialize=False)),
                ('version', models.IntegerField(verbose_name='version number')),
                ('create_time', models.DateTimeField(auto_now_add=True, max_length=32, verbose_name='creation time')),
                ('create_by', models.CharField(max_length=15, verbose_name='creator name')),
                ('update_time', models.DateTimeField(auto_now=True, max_length=32, verbose_name='update time')),
                ('update_by', models.CharField(max_length=15, verbose_name='update by user')),
                ('is_deleted', models.BooleanField(max_length=10, verbose_name='the flag of deleted or not')),
                ('url', models.FileField(upload_to='avatar/', verbose_name='the path saved user avatar')),
            ],
            options={
                'verbose_name_plural': 'User avatars',
            },
        ),
        migrations.CreateModel(
            name='Cover',
            fields=[
                ('id', models.UUIDField(auto_created=True, default='afab3e38ac5211eca2a7acbc329b8455', primary_key=True, serialize=False)),
                ('version', models.IntegerField(verbose_name='version number')),
                ('create_time', models.DateTimeField(auto_now_add=True, max_length=32, verbose_name='creation time')),
                ('create_by', models.CharField(max_length=15, verbose_name='creator name')),
                ('update_time', models.DateTimeField(auto_now=True, max_length=32, verbose_name='update time')),
                ('update_by', models.CharField(max_length=15, verbose_name='update by user')),
                ('is_deleted', models.BooleanField(max_length=10, verbose_name='the flag of deleted or not')),
                ('cover_url', models.FileField(upload_to='article_img/', verbose_name='the url address of article cover images')),
            ],
            options={
                'verbose_name_plural': 'Article cover images',
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.UUIDField(auto_created=True, default='afab3e38ac5211eca2a7acbc329b8455', primary_key=True, serialize=False)),
                ('version', models.IntegerField(verbose_name='version number')),
                ('create_time', models.DateTimeField(auto_now_add=True, max_length=32, verbose_name='creation time')),
                ('create_by', models.CharField(max_length=15, verbose_name='creator name')),
                ('update_time', models.DateTimeField(auto_now=True, max_length=32, verbose_name='update time')),
                ('update_by', models.CharField(max_length=15, verbose_name='update by user')),
                ('is_deleted', models.BooleanField(max_length=10, verbose_name='the flag of deleted or not')),
                ('email', models.EmailField(max_length=254, verbose_name='contact email')),
                ('content', models.TextField(verbose_name='feedback content')),
                ('status', models.BooleanField(default=False, verbose_name='feedback status; 0 - no reply, 1 - replied')),
                ('reply_content', models.TextField(blank=True, null=True, verbose_name='reply content')),
            ],
            options={
                'verbose_name_plural': 'Website visitor feedback',
            },
        ),
        migrations.CreateModel(
            name='Memories',
            fields=[
                ('id', models.UUIDField(auto_created=True, default='afab3e38ac5211eca2a7acbc329b8455', primary_key=True, serialize=False)),
                ('version', models.IntegerField(verbose_name='version number')),
                ('create_time', models.DateTimeField(auto_now_add=True, max_length=32, verbose_name='creation time')),
                ('create_by', models.CharField(max_length=15, verbose_name='creator name')),
                ('update_time', models.DateTimeField(auto_now=True, max_length=32, verbose_name='update time')),
                ('update_by', models.CharField(max_length=15, verbose_name='update by user')),
                ('is_deleted', models.BooleanField(max_length=10, verbose_name='the flag of deleted or not')),
                ('title', models.CharField(max_length=50, verbose_name='memories title')),
                ('content', models.TextField(verbose_name='memories content')),
                ('illustration', models.TextField(blank=True, null=True, verbose_name='illustration groups,delimit with semicolon')),
            ],
            options={
                'verbose_name_plural': 'Memories',
            },
        ),
        migrations.CreateModel(
            name='MenuImg',
            fields=[
                ('id', models.UUIDField(auto_created=True, default='afab3e38ac5211eca2a7acbc329b8455', primary_key=True, serialize=False)),
                ('version', models.IntegerField(verbose_name='version number')),
                ('create_time', models.DateTimeField(auto_now_add=True, max_length=32, verbose_name='creation time')),
                ('create_by', models.CharField(max_length=15, verbose_name='creator name')),
                ('update_time', models.DateTimeField(auto_now=True, max_length=32, verbose_name='update time')),
                ('update_by', models.CharField(max_length=15, verbose_name='update by user')),
                ('is_deleted', models.BooleanField(max_length=10, verbose_name='the flag of deleted or not')),
                ('img_url', models.FileField(upload_to='website_bg/')),
            ],
            options={
                'verbose_name_plural': 'Website background images',
            },
        ),
        migrations.CreateModel(
            name='MyInfo',
            fields=[
                ('id', models.UUIDField(auto_created=True, default='afab3e38ac5211eca2a7acbc329b8455', primary_key=True, serialize=False)),
                ('version', models.IntegerField(verbose_name='version number')),
                ('create_time', models.DateTimeField(auto_now_add=True, max_length=32, verbose_name='creation time')),
                ('create_by', models.CharField(max_length=15, verbose_name='creator name')),
                ('update_time', models.DateTimeField(auto_now=True, max_length=32, verbose_name='update time')),
                ('update_by', models.CharField(max_length=15, verbose_name='update by user')),
                ('is_deleted', models.BooleanField(max_length=10, verbose_name='the flag of deleted or not')),
                ('name', models.CharField(max_length=15, verbose_name='Name')),
                ('occupation', models.CharField(max_length=50, verbose_name='occupation')),
                ('email', models.EmailField(max_length=50, verbose_name='email address')),
                ('website_url', models.CharField(max_length=200, verbose_name='website link')),
                ('address', models.CharField(max_length=50, verbose_name='address')),
                ('bilibili_url', models.URLField(verbose_name='Bilibili link')),
                ('github_url', models.URLField(verbose_name='Github link')),
                ('webchat_img', models.FileField(upload_to='my_info/', verbose_name='Wechat images')),
                ('qq_img', models.FileField(upload_to='my_info/', verbose_name='QQ images')),
            ],
            options={
                'verbose_name_plural': 'My detailed information',
            },
        ),
        migrations.CreateModel(
            name='NavigationCategory',
            fields=[
                ('id', models.UUIDField(auto_created=True, default='afab3e38ac5211eca2a7acbc329b8455', primary_key=True, serialize=False)),
                ('version', models.IntegerField(verbose_name='version number')),
                ('create_time', models.DateTimeField(auto_now_add=True, max_length=32, verbose_name='creation time')),
                ('create_by', models.CharField(max_length=15, verbose_name='creator name')),
                ('update_time', models.DateTimeField(auto_now=True, max_length=32, verbose_name='update time')),
                ('update_by', models.CharField(max_length=15, verbose_name='update by user')),
                ('is_deleted', models.BooleanField(max_length=10, verbose_name='the flag of deleted or not')),
                ('name', models.CharField(max_length=50, verbose_name='category name')),
                ('icon', models.CharField(max_length=50, verbose_name='category icon')),
            ],
            options={
                'verbose_name_plural': 'Navigation categories',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.UUIDField(auto_created=True, default='afab3e38ac5211eca2a7acbc329b8455', primary_key=True, serialize=False)),
                ('version', models.IntegerField(verbose_name='version number')),
                ('create_time', models.DateTimeField(auto_now_add=True, max_length=32, verbose_name='creation time')),
                ('create_by', models.CharField(max_length=15, verbose_name='creator name')),
                ('update_time', models.DateTimeField(auto_now=True, max_length=32, verbose_name='update time')),
                ('update_by', models.CharField(max_length=15, verbose_name='update by user')),
                ('is_deleted', models.BooleanField(max_length=10, verbose_name='the flag of deleted or not')),
            ],
            options={
                'verbose_name_plural': 'crawled news from third party',
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.UUIDField(auto_created=True, default='afab3e38ac5211eca2a7acbc329b8455', primary_key=True, serialize=False)),
                ('version', models.IntegerField(verbose_name='version number')),
                ('create_time', models.DateTimeField(auto_now_add=True, max_length=32, verbose_name='creation time')),
                ('create_by', models.CharField(max_length=15, verbose_name='creator name')),
                ('update_time', models.DateTimeField(auto_now=True, max_length=32, verbose_name='update time')),
                ('update_by', models.CharField(max_length=15, verbose_name='update by user')),
                ('is_deleted', models.BooleanField(max_length=10, verbose_name='the flag of deleted or not')),
                ('name', models.CharField(max_length=50, null=True, verbose_name='product name')),
                ('href', models.URLField(verbose_name='promotion link')),
                ('illustration', models.FileField(blank=True, help_text='single image', null=True, upload_to='promotion/', verbose_name='promotion illustration url')),
                ('illustration_list', models.TextField(blank=True, help_text='Please delimit with semicolon for multiple illustration url', null=True, verbose_name='promotion illustration group')),
                ('is_show', models.BooleanField(default=True, verbose_name='show the illustration or not')),
                ('owner', models.CharField(blank=True, max_length=50, null=True, verbose_name='the owner of promotion')),
                ('abstract', models.CharField(blank=True, max_length=200, null=True, verbose_name='promotion abstract')),
            ],
            options={
                'verbose_name_plural': 'Website promotion information',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.UUIDField(auto_created=True, default='afab3e38ac5211eca2a7acbc329b8455', primary_key=True, serialize=False)),
                ('version', models.IntegerField(verbose_name='version number')),
                ('create_time', models.DateTimeField(auto_now_add=True, max_length=32, verbose_name='creation time')),
                ('create_by', models.CharField(max_length=15, verbose_name='creator name')),
                ('update_time', models.DateTimeField(auto_now=True, max_length=32, verbose_name='update time')),
                ('update_by', models.CharField(max_length=15, verbose_name='update by user')),
                ('is_deleted', models.BooleanField(max_length=10, verbose_name='the flag of deleted or not')),
                ('name', models.CharField(max_length=20, verbose_name='tag name')),
            ],
            options={
                'verbose_name_plural': 'Article tags',
            },
        ),
        migrations.CreateModel(
            name='Website',
            fields=[
                ('id', models.UUIDField(auto_created=True, default='afab3e38ac5211eca2a7acbc329b8455', primary_key=True, serialize=False)),
                ('version', models.IntegerField(verbose_name='version number')),
                ('create_time', models.DateTimeField(auto_now_add=True, max_length=32, verbose_name='creation time')),
                ('create_by', models.CharField(max_length=15, verbose_name='creator name')),
                ('update_time', models.DateTimeField(auto_now=True, max_length=32, verbose_name='update time')),
                ('update_by', models.CharField(max_length=15, verbose_name='update by user')),
                ('is_deleted', models.BooleanField(max_length=10, verbose_name='the flag of deleted or not')),
                ('title', models.CharField(max_length=50, verbose_name='website title')),
                ('abstract', models.CharField(max_length=225, verbose_name='website brief introduction')),
                ('key_words', models.CharField(max_length=50, verbose_name='website key word')),
                ('record_number', models.CharField(max_length=32, verbose_name='website record number')),
                ('version_number', models.CharField(max_length=15, verbose_name='website version number')),
                ('icon', models.FileField(upload_to='website_icon/', verbose_name='website icon')),
            ],
            options={
                'verbose_name_plural': 'website info',
            },
        ),
        migrations.CreateModel(
            name='Navigation',
            fields=[
                ('id', models.UUIDField(auto_created=True, default='afab3e38ac5211eca2a7acbc329b8455', primary_key=True, serialize=False)),
                ('version', models.IntegerField(verbose_name='version number')),
                ('create_time', models.DateTimeField(auto_now_add=True, max_length=32, verbose_name='creation time')),
                ('create_by', models.CharField(max_length=15, verbose_name='creator name')),
                ('update_time', models.DateTimeField(auto_now=True, max_length=32, verbose_name='update time')),
                ('update_by', models.CharField(max_length=15, verbose_name='update by user')),
                ('is_deleted', models.BooleanField(max_length=10, verbose_name='the flag of deleted or not')),
                ('icon', models.FileField(blank=True, null=True, upload_to='website_icon/', verbose_name='website icon')),
                ('icon_href', models.URLField(blank=True, help_text='Online link', null=True, verbose_name='icon href')),
                ('title', models.CharField(max_length=50, verbose_name='website title')),
                ('abstract', models.CharField(max_length=200, null=True, verbose_name='website abstract')),
                ('website_href', models.URLField(null=True, verbose_name='website href')),
                ('status', models.IntegerField(choices=[(0, 'PENDING'), (1, 'APPROVAL'), (2, 'REJECTED')], default=0, verbose_name='website navigation status')),
                ('nav_category_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='blogweb.navigationcategory', verbose_name='website navigation category')),
            ],
            options={
                'verbose_name_plural': 'Navigation categories',
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.UUIDField(auto_created=True, default='afab3e38ac5211eca2a7acbc329b8455', primary_key=True, serialize=False)),
                ('version', models.IntegerField(verbose_name='version number')),
                ('create_time', models.DateTimeField(auto_now_add=True, max_length=32, verbose_name='creation time')),
                ('create_by', models.CharField(max_length=15, verbose_name='creator name')),
                ('update_time', models.DateTimeField(auto_now=True, max_length=32, verbose_name='update time')),
                ('update_by', models.CharField(max_length=15, verbose_name='update by user')),
                ('is_deleted', models.BooleanField(max_length=10, verbose_name='the flag of deleted or not')),
                ('menu_name', models.CharField(max_length=50, null=True, verbose_name='chinese menu name')),
                ('menu_name_en', models.CharField(max_length=50, null=True, verbose_name='english menu name')),
                ('slogan', models.CharField(max_length=50, null=True, verbose_name='website slogan')),
                ('slogan_abstract', models.CharField(help_text='delimit with semicolon for multiple slogan', max_length=100, null=True)),
                ('is_rotate_slogan', models.BooleanField(default=False, verbose_name='rotating slogan abstract or not')),
                ('is_rotate_background', models.BooleanField(default=False, help_text='rotation by default if there are multiple images', verbose_name='rotating background images or not')),
                ('rotation_interval', models.IntegerField(default=10, help_text='rotation interval,default is 10 seconds', verbose_name='rotating background images interval')),
                ('background_img', models.ManyToManyField(help_text='can be set multiple background images', to='blogweb.menuimg', verbose_name='menu background images')),
            ],
            options={
                'verbose_name_plural': 'Website menu information',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.UUIDField(auto_created=True, default='afab3e38ac5211eca2a7acbc329b8455', primary_key=True, serialize=False)),
                ('version', models.IntegerField(verbose_name='version number')),
                ('create_time', models.DateTimeField(auto_now_add=True, max_length=32, verbose_name='creation time')),
                ('create_by', models.CharField(max_length=15, verbose_name='creator name')),
                ('update_time', models.DateTimeField(auto_now=True, max_length=32, verbose_name='update time')),
                ('update_by', models.CharField(max_length=15, verbose_name='update by user')),
                ('is_deleted', models.BooleanField(max_length=10, verbose_name='the flag of deleted or not')),
                ('likes_counts', models.IntegerField(default=0, verbose_name='the counts of likes for the comment')),
                ('comment_content', models.TextField(blank=True, null=True, verbose_name='comment content')),
                ('comment_counts', models.IntegerField(default=0, verbose_name='comment counts')),
                ('illustration', models.TextField(blank=True, null=True, verbose_name='illustration in comment')),
                ('article_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blogweb.article', verbose_name='comment on the corresponding article')),
                ('parent_comment_content', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='blogweb.comment', verbose_name='parent level comment content')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='comment user')),
            ],
            options={
                'verbose_name_plural': 'Article comments',
            },
        ),
        migrations.AddField(
            model_name='article',
            name='cover_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='blogweb.cover', verbose_name='article cover'),
        ),
        migrations.AddField(
            model_name='article',
            name='tag',
            field=models.ManyToManyField(blank=True, to='blogweb.tag', verbose_name='article tags'),
        ),
        migrations.AddField(
            model_name='userinfo',
            name='avatar_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='blogweb.avatar', verbose_name='User avatar id'),
        ),
        migrations.AddField(
            model_name='userinfo',
            name='favorites',
            field=models.ManyToManyField(to='blogweb.article', verbose_name='The favorite articles of users'),
        ),
        migrations.AddField(
            model_name='userinfo',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='userinfo',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
